{
  "version": 3,
  "sources": ["../../../../../../node_modules/projects/http-loader/src/lib/http-loader.ts", "../../../../../../node_modules/projects/http-loader/src/ngx-translate-http-loader.ts"],
  "sourcesContent": ["import { HttpBackend, HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable, InjectionToken, Provider } from \"@angular/core\";\nimport { TranslateLoader, TranslationObject } from \"@ngx-translate/core\";\nimport { Observable } from \"rxjs\";\n\nexport interface TranslateHttpLoaderConfig {\n    prefix: string;\n    suffix: string;\n    enforceLoading: boolean;\n    useHttpBackend: boolean;\n}\n\nexport const TRANSLATE_HTTP_LOADER_CONFIG = new InjectionToken<Partial<TranslateHttpLoaderConfig>>(\n    \"TRANSLATE_HTTP_LOADER_CONFIG\",\n);\n\n@Injectable()\nexport class TranslateHttpLoader implements TranslateLoader {\n    private http: HttpClient;\n    private config: TranslateHttpLoaderConfig;\n\n    constructor() {\n        this.config = {\n            prefix: \"/assets/i18n/\",\n            suffix: \".json\",\n            enforceLoading: false,\n            useHttpBackend: false,\n            ...inject(TRANSLATE_HTTP_LOADER_CONFIG),\n        };\n\n        this.http = this.config.useHttpBackend\n            ? new HttpClient(inject(HttpBackend))\n            : inject(HttpClient);\n    }\n\n    /**\n     * Gets the translations from the server\n     */\n    public getTranslation(lang: string): Observable<TranslationObject> {\n        const cacheBuster = this.config.enforceLoading ? `?enforceLoading=${Date.now()}` : \"\";\n\n        return this.http.get(\n            `${this.config.prefix}${lang}${this.config.suffix}${cacheBuster}`,\n        ) as Observable<TranslationObject>;\n    }\n}\n\nexport function provideTranslateHttpLoader(\n    config: Partial<TranslateHttpLoaderConfig> = {},\n): Provider[] {\n    const useBackend = config.useHttpBackend ?? false;\n\n    return [\n        {\n            provide: TRANSLATE_HTTP_LOADER_CONFIG,\n            useValue: config,\n        },\n        {\n            provide: TranslateLoader,\n            useClass: TranslateHttpLoader,\n            deps: [useBackend ? HttpBackend : HttpClient, TRANSLATE_HTTP_LOADER_CONFIG],\n        },\n    ];\n}\n", "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;IAYaA,+BAA+B,IAAIC,eAC5C,8BAA8B;IAIrBC,4BAAAA,qBAAmB;EACpBC;EACAC;EAERC,cAAA;AACI,SAAKD,SAAS;MACVE,QAAQ;MACRC,QAAQ;MACRC,gBAAgB;MAChBC,gBAAgB;OACbC,OAAOV,4BAA4B;AAG1C,SAAKG,OAAO,KAAKC,OAAOK,iBAClB,IAAIE,WAAWD,OAAOE,WAAW,CAAC,IAClCF,OAAOC,UAAU;;;;;EAMpBE,eAAeC,MAAY;AAC9B,UAAMC,cAAc,KAAKX,OAAOI,iBAAiB,mBAAmBQ,KAAKC,IAAG,CAAE,KAAK;AAEnF,WAAO,KAAKd,KAAKe,IACb,GAAG,KAAKd,OAAOE,MAAM,GAAGQ,IAAI,GAAG,KAAKV,OAAOG,MAAM,GAAGQ,WAAW,EAAE;;;qCAzBhEb,sBAAmB;EAAA;;WAAnBA;IAAmBiB,SAAnBjB,qBAAmBkB;EAAA,CAAA;;;sEAAnBlB,qBAAmB,CAAA;UAD/BmB;;;AA+Be,SAAAC,2BACZlB,SAA6C,CAAA,GAAE;AAE/C,QAAMmB,aAAanB,OAAOK,kBAAkB;AAE5C,SAAO,CACH;IACIe,SAASxB;IACTyB,UAAUrB;EACb,GACD;IACIoB,SAASE;IACTC,UAAUzB;IACV0B,MAAM,CAACL,aAAaX,cAAcD,YAAYX,4BAA4B;EAC7E,CAAA;AAET;",
  "names": ["TRANSLATE_HTTP_LOADER_CONFIG", "InjectionToken", "TranslateHttpLoader", "http", "config", "constructor", "prefix", "suffix", "enforceLoading", "useHttpBackend", "inject", "HttpClient", "HttpBackend", "getTranslation", "lang", "cacheBuster", "Date", "now", "get", "factory", "Éµfac", "Injectable", "provideTranslateHttpLoader", "useBackend", "provide", "useValue", "TranslateLoader", "useClass", "deps"]
}
